<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Chincheng&#39;s Site</title>
    <link>https://chincheng.github.io/myblog/categories/blog/</link>
    <description>Recent content in Blog on Chincheng&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 Nov 2018 07:37:50 +0000</lastBuildDate>
    
	<atom:link href="https://chincheng.github.io/myblog/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rasp Cm3</title>
      <link>https://chincheng.github.io/myblog/blog/rasp-cm3/</link>
      <pubDate>Wed, 14 Nov 2018 07:37:50 +0000</pubDate>
      
      <guid>https://chincheng.github.io/myblog/blog/rasp-cm3/</guid>
      <description>如何將 OS image 寫進 Raspberry Pi CM1/CM3 準備工作  Download and run the Windows installer to install the drivers and boot tool. Plug your host PC USB into the CMIO USB SLAVE port, making sure J4 is set to the EN position. Apply power to the CMIO board; Windows should now find the hardware and install the driver. Once the driver installation is complete, run the RPiBoot.exe tool that was previously installed.</description>
    </item>
    
    <item>
      <title>Build a Docker Image</title>
      <link>https://chincheng.github.io/myblog/blog/hugo-docker/</link>
      <pubDate>Thu, 01 Nov 2018 08:41:42 +0000</pubDate>
      
      <guid>https://chincheng.github.io/myblog/blog/hugo-docker/</guid>
      <description> Build a container image of Hugo  $ docker build -t ownerName/imageName
 Dockerfile for building image:
FROM alpine:latest LABEL maintainer=&amp;quot;xxxxx@outlook.com&amp;quot; RUN apk add --no-cache \ curl \ git \ openssh-client \ rsync ENV VERSION 0.50 RUN mkdir -p /usr/local/src \ &amp;amp;&amp;amp; cd /usr/local/src \ &amp;amp;&amp;amp; curl -L https://github.com/gohugoio/hugo/releases/download/v${VERSION}/hugo_${VERSION}_linux-64bit.tar.gz | tar -xz \ &amp;amp;&amp;amp; mv hugo /usr/local/bin/hugo \ &amp;amp;&amp;amp; curl -L https://bin.equinox.io/c/dhgbqpS8Bvy/minify-stable-linux-amd64.tgz | tar -xz \ &amp;amp;&amp;amp; mv minify /usr/local/bin/ \ &amp;amp;&amp;amp; addgroup -Sg 1000 hugo \ &amp;amp;&amp;amp; adduser -SG hugo -u 1000 -h /src hugo WORKDIR /src EXPOSE 1313  </description>
    </item>
    
  </channel>
</rss>